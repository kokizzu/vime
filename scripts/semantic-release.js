const parser = require('git-log-parser');

// This hack allows us to use semantic-release for a monorepo.
// https://github.com/semantic-release/semantic-release/issues/193#issuecomment-578436666
parser.parse = ((parse) => (config, options) => {
  if (Array.isArray(config._)) {
    config._.push(options.cwd);
  } else if (config._) {
    // eslint-disable-next-line no-param-reassign
    config._ = [config._, options.cwd];
  } else {
    // eslint-disable-next-line no-param-reassign
    config._ = options.cwd;
  }
  return parse(config, options);
})(parser.parse);

const changelogTitle = `
# 🤖 Changelog

📝 &nbsp;All notable changes to this project will be documented in this file. 

🧑 &nbsp;Are you human? See the [changelog](../../CHANGELOG.md) in the root of the repository.

🚀 &nbsp;This file is auto-generated by [semantic-release](https://github.com/semantic-release/semantic-release).
`;

module.exports = {
  tagFormat: `${process.env.npm_package_name}@\${version}`,
  verifyConditions: [
    '@semantic-release/changelog',
    '@semantic-release/npm',
    '@semantic-release/git',
    '@semantic-release/github',
  ],
  prepare: [
    {
      path: '@semantic-release/changelog',
      changelogTitle,
    },
    '@semantic-release/npm',
    '@semantic-release/github',
    {
      path: '@semantic-release/git',
      message: `chore(release): 🥳 ${process.env.npm_package_name}@\${nextRelease.version} [skip ci]`,
    },
  ],
  success: [],
};
